{"version":3,"sources":["../src/calcstat_ctrl.js"],"names":["getColorForValue","data","value","i","thresholds","length","colorMap","_","first","calculate","formula","valueMap","alias","re","RegExp","replace","eval","err","error","Error","message","MetricsPanelCtrl","$","angular","kbn","TimeSeries","config","panelDefaults","links","datasource","maxDataPoints","interval","targets","cacheTimeout","format","prefix","postfix","nullText","valueMaps","op","text","mappingTypes","name","rangeMaps","from","to","mappingType","nullFiller","nullPointMode","valueName","prefixFontSize","valueFontSize","postfixFontSize","colorBackground","circleBackground","colorValue","colors","sparkline","show","full","lineColor","fillColor","gauge","minValue","maxValue","thresholdMarkers","thresholdLabels","tableColumn","CalcStatCtrl","$scope","$injector","$location","linkSrv","templateUrl","dataType","series","invalidGaugeRange","valueNameOptions","defaults","panel","events","on","onDataReceived","bind","onDataError","onInitEditMode","dataList","type","tableData","map","tableHandler","setTableValues","seriesHandler","setValues","render","fontSizes","addEditorTab","unitFormats","getUnitFormats","seriesData","datapoints","target","flotpairs","getFlotPairs","columnNames","columns","forEach","column","columnIndex","tableColumnOptions","find","setTableColumnToSensibleDefault","rows","row","datapoint","key","push","subItem","col","undefined","highestValue","lowestValue","Number","MAX_VALUE","isString","valueFormatted","escape","valueRounded","decimalInfo","getDecimalsForValue","formatFunc","valueFormats","decimals","scaledDecimals","roundValue","setValueMapping","options","background","tmp","lastPoint","last","lastValue","isArray","stats","scopedVars","extend","label","calcFormula","calculateDisplayValue","flotPairs","calculatedFlotPairs","longestMetricsLength","longestMetricIndex","j","point","result","timestamp","flotPair","parseFloat","isNumber","delta","dec","Math","floor","log","LN10","magn","pow","norm","size","max","index","indexOf","splice","rangeMap","scope","elem","attrs","ctrl","$timeout","templateSrv","linkInfo","$panelContainer","setElementHeight","css","height","applyColoringThresholds","valueString","color","getSpan","className","fontSize","getBigValueHtml","body","getValueText","addGauge","width","dimension","min","plotCanvas","plotCss","top","margin","position","bgColor","bootData","user","lightTheme","fontScale","parseInt","gaugeWidth","thresholdMarkersWidth","gauges","border","shadow","frame","layout","thresholdWidth","cell","threshold","values","font","formatter","family","append","plotSeries","plot","addSparkline","setTimeout","bottom","left","dynamicHeightMargin","round","legend","lines","fill","lineWidth","yaxes","xaxis","mode","range","valueOf","grid","hoverable","split","strVale","trim","isNaN","fullscreen","circleHeight","circleWidth","addClass","removeClass","html","toggleClass","getPanelLinkAnchorInfo","hookupDrilldownLinkTooltip","drilldownTooltip","mouseleave","detach","click","evt","parents","redirectWindow","window","open","href","location","url","mousemove","e","title","place_tt","pageX","pageY","renderingCompleted"],"mappings":"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","file":"calcstat_ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport 'jquery.flot';\nimport './modules/jquery.flot.gauge';\n\nimport $ from 'jquery';\nimport _ from 'lodash';\nimport angular from 'angular';\nimport kbn from 'app/core/utils/kbn';\nimport TimeSeries from 'app/core/time_series2';\nimport config from 'app/core/config';\n\n\n// Set and populate defaults\nconst panelDefaults = {\n  links: [],\n  datasource: null,\n  maxDataPoints: 100,\n  interval: null,\n  targets: [{}],\n  cacheTimeout: null,\n  format: 'none',\n  prefix: '',\n  postfix: '',\n  nullText: null,\n  valueMaps: [\n    { value: 'null', op: '=', text: 'N/A' }\n  ],\n  mappingTypes: [\n    {name: 'value to text', value: 1},\n    {name: 'range to text', value: 2},\n  ],\n  rangeMaps: [\n    { from: 'null', to: 'null', text: 'N/A' }\n  ],\n  mappingType: 1,\n  nullFiller: 0,\n  nullPointMode: 'connected',\n  valueName: 'avg',\n  prefixFontSize: '50%',\n  valueFontSize: '80%',\n  postfixFontSize: '50%',\n  thresholds: '',\n  colorBackground: false,\n  circleBackground: false,\n  colorValue: false,\n  colors: [\"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\"],\n  sparkline: {\n    show: false,\n    full: false,\n    lineColor: 'rgb(31, 120, 193)',\n    fillColor: 'rgba(31, 118, 189, 0.18)',\n  },\n  gauge: {\n    show: false,\n    minValue: 0,\n    maxValue: 100,\n    thresholdMarkers: true,\n    thresholdLabels: false\n  },\n  tableColumn: ''\n};\n\nexport class CalcStatCtrl extends MetricsPanelCtrl {\n\n  constructor($scope, $injector, $location, linkSrv) {\n    super($scope, $injector);\n    \n\n    this.templateUrl = 'tpl/module.html';\n    this.linkSrv = linkSrv;\n    this.dataType ='timeseries';\n    this.series = [];\n    this.invalidGaugeRange = true;\n    this.valueNameOptions = ['min','max','avg', 'current', 'total', 'name', 'first', 'delta', 'diff', 'range'];\n\n    _.defaults(this.panel, panelDefaults);\n\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n  }\n\n  onDataReceived(dataList) {\n    // let from = this.range.from.format(\"x\");\n    // let to = this.range.to.format(\"x\");\n\n    // for (let i=0; i < dataList.length; i++) {\n    //   let interval = kbn.interval_to_seconds(this.panel.targets[0].period) * 1000;\n    //   if (dataList[i].datapoints && dataList[i].datapoints.length != 0) {\n    //     let firstPoint = dataList[i].datapoints[0];\n    //     let lastPoint = dataList[i].datapoints[dataList[i].datapoints.length - 1];\n    //     let lookup = dataList[i].datapoints.reduce(function(map, point) {\n    //       map[point[1]] = point[0];\n    //       return map;\n    //     }, {});\n\n    //     let datapoints = [];\n    //     // work on before first point\n    //     for (let timestamp = firstPoint[1] - interval; timestamp > from - interval; timestamp -= interval) {\n    //       datapoints.unshift([this.panel.nullFiller, timestamp]);\n    //     }\n\n    //     // work on filling in the gaps\n    //     for (let timestamp = firstPoint[1]; timestamp <= to - interval; timestamp += interval) {\n    //       if (lookup[timestamp] != null) {\n    //         datapoints.push([lookup[timestamp], timestamp]);\n    //       }\n    //       else {\n    //         datapoints.push([this.panel.nullFiller, timestamp]);\n    //       }\n    //     }\n    //     dataList[i].datapoints = datapoints;\n    //   }\n    //   else {\n    //     dataList[i].datapoints = [];\n    //   }\n    // }\n\n    var data= {};\n    if (dataList.length > 0 && dataList[0].type === 'table'){\n      this.dataType = 'table';\n      tableData = dataList.map(this.tableHandler.bind(this));\n      this.setTableValues(tableData, data);\n    } else {\n      this.dataType = 'timeseries';\n      this.series = dataList.map(this.seriesHandler.bind(this));\n      this.setValues(data);\n    }\n    this.data = data;\n    this.render();\n  } \n\n  onDataError() {\n    this.onDataReceived([]);\n  }\n\n  onInitEditMode() {\n    this.fontSizes = ['20%', '30%','50%','70%','80%','100%', '110%', '120%', '150%', '170%', '200%'];\n    this.addEditorTab('Options', 'public/plugins/calcstat/tpl/editor.html', 2);\n    this.addEditorTab('Value Mappings', 'public/plugins/calcstat/tpl/mappings.html', 3);\n    this.unitFormats = kbn.getUnitFormats();\n\n  }\n\n  seriesHandler(seriesData) {\n    var series = new TimeSeries({\n      datapoints: seriesData.datapoints,\n      alias: seriesData.target,\n    });\n\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n    return series;\n  }\n\n  tableHandler(tableData) {\n    const datapoints = [];\n    const columnNames = {};\n\n    tableData.columns.forEach((column, columnIndex) => {\n      columnNames[columnIndex] = column.text;\n    });\n\n    this.tableColumnOptions = columnNames;\n    if (!_.find(tableData.columns, ['text', this.panel.tableColumn])) {\n      this.setTableColumnToSensibleDefault(tableData);\n    }\n\n    tableData.rows.forEach((row) => {\n      const datapoint = {};\n\n      row.forEach((value, columnIndex) => {\n        const key = columnNames[columnIndex];\n        datapoint[key] = value;\n      });\n\n      datapoints.push(datapoint);\n    });\n\n    return datapoints;\n  }\n\n  setUnitFormat(subItem) {\n    this.panel.format = subItem.value;\n    this.render();\n  }\nsetTableColumnToSensibleDefault(tableData) {\n    if (this.tableColumnOptions.length === 1) {\n      this.panel.tableColumn = this.tableColumnOptions[0];\n    } else {\n      this.panel.tableColumn = _.find(tableData.columns, (col) => { return col.type !== 'time'; }).text;\n    }\n  }\n\n  setTableValues(tableData, data) {\n    if (!tableData || tableData.length === 0) {\n      return;\n    }\n\n    if (tableData[0].length === 0 || tableData[0][0][this.panel.tableColumn] === undefined) {\n      return;\n    }\n\n    let highestValue = 0;\n    let lowestValue = Number.MAX_VALUE;\n    const datapoint = tableData[0][0];\n    data.value = datapoint[this.panel.tableColumn];\n\n    if (_.isString(data.value)) {\n      data.valueFormatted = _.escape(data.value);\n      data.value = 0;\n      data.valueRounded = 0;\n    } else {\n      const decimalInfo = this.getDecimalsForValue(data.value);\n      const formatFunc = kbn.valueFormats[this.panel.format];\n      data.valueFormatted = formatFunc(datapoint[this.panel.tableColumn], decimalInfo.decimals, decimalInfo.scaledDecimals);\n      data.valueRounded = kbn.roundValue(data.value, this.panel.decimals || 0);\n    }\n\n    this.setValueMapping(data);\n  }\n\n  setColoring(options) {\n    if (options.background) {\n      this.panel.colorValue = false;\n      this.panel.colors = ['rgba(71, 212, 59, 0.4)', 'rgba(245, 150, 40, 0.73)', 'rgba(225, 40, 40, 0.59)'];\n    } else {\n      this.panel.colorBackground = false;\n      this.panel.colors = ['rgba(50, 172, 45, 0.97)', 'rgba(237, 129, 40, 0.89)', 'rgba(245, 54, 54, 0.9)'];\n    }\n    this.render();\n  }\n\n  invertColorOrder() {\n    var tmp = this.panel.colors[0];\n    this.panel.colors[0] = this.panel.colors[2];\n    this.panel.colors[2] = tmp;\n    this.render();\n  }\n\n  setValues(data) {\n    data.flotpairs = [];\n\n    if (this.series && this.series.length == 1) {\n      var lastPoint = _.last(this.series[0].datapoints);\n      var lastValue = _.isArray(lastPoint) ? lastPoint[0] : null;\n      \n      if (this.panel.valueName === 'name') {\n        data.value = 0;\n        data.valueRounded = 0;\n        data.valueFormatted = this.series[0].alias;\n      } else if (_.isString(lastValue)) {\n        data.value = 0;\n        data.valueFormatted = _.escape(lastValue);\n        data.valueRounded = 0;\n      } else {\n        data.value = this.series[0].stats[this.panel.valueName];\n        data.flotpairs = this.series[0].flotpairs;\n\n        var decimalInfo = this.getDecimalsForValue(data.value);\n        var formatFunc = kbn.valueFormats[this.panel.format];\n        data.valueFormatted = formatFunc(data.value, decimalInfo.decimals, decimalInfo.scaledDecimals);\n        data.valueRounded = kbn.roundValue(data.value, decimalInfo.decimals);\n      }\n\n      // Add $__name variable for using in prefix or postfix\n      data.scopedVars = _.extend({}, this.panel.scopedVars);\n      data.scopedVars[\"__name\"] = {value: this.series[0].label};\n    }\n    else if (this.series && this.series.length > 1) {\n      let formula = this.panel.calcFormula;\n      if (formula === undefined || formula === null) {\n        data.value = 0;\n        data.valueRounded = 0;\n        data.valueFormatted = 'Formula Required';\n      }\n      else {\n        if (this.panel.valueName === 'name') {\n          let error = new Error();\n          error.message = 'Unsupported Error';\n          error.data = 'Does not support name fields when calculating stats';\n          throw error;\n        }\n\n        data.value = this.calculateDisplayValue(formula); \n\n        let flotPairs = [];\n        this.calculatedFlotPairs(formula, flotPairs);\n        if (flotPairs != null && flotPairs.length > 0) {\n          data.flotpairs = flotPairs;\n        }\n\n        let decimalInfo = this.getDecimalsForValue(data.value);\n        let formatFunc = kbn.valueFormats[this.panel.format];\n        data.valueFormatted = formatFunc(data.value, decimalInfo.decimals, decimalInfo.scaledDecimals);\n        data.valueRounded = kbn.roundValue(data.value, decimalInfo.decimals);\n      }\n      // Add $__name variable for using in prefix or postfix\n      data.scopedVars = _.extend({}, this.panel.scopedVars);\n      data.scopedVars[\"__name\"] = {value: this.series[0].label};\n    }\n  \n    this.setValueMapping(data);\n  }\n\n  calculatedFlotPairs(formula, flotPairs) {\n\n    let longestMetricsLength = this.series[0].flotpairs.length;\n    let longestMetricIndex = 0;\n    for(let i=1; i < this.series.length; i++) {\n      if (longestMetricsLength < this.series[i].flotpairs.length) {\n        longestMetricsLength = this.series[i].flotpairs.length;\n        longestMetricIndex = i;\n      }\n    }\n\n    for(let j=0; j < longestMetricsLength; j++) {\n      let map = {};\n      for (let i=0; i < this.series.length; i++) {\n        let alias = this.series[i].alias === null ? 'pos-' + i : this.series[i].alias;\n        let point = null;\n        if (this.series[i].flotpairs.length === longestMetricsLength) {\n          point = this.series[i].flotpairs[j];\n        }\n        else {\n          point = _.last(this.series[i].flotpairs);\n        }\n        let value = _.isArray(point) ? point[1] : 0;\n        map[alias] = _.isString(value) ? 0 : value;\n      }\n      let result = calculate(formula, map);\n      let timestamp = this.series[longestMetricIndex].flotpairs[j][0];\n\n      let flotPair = [];\n      flotPair.push(timestamp);\n      flotPair.push(result);\n      flotPairs.push(flotPair);\n    }\n  }\n\n  calculateDisplayValue(formula) {\n    let map = {};\n    for(let i=0; i < this.series.length; i++) {\n      let value = 0;\n      if (this.series[i].datapoints != null && this.series[i].datapoints.length != 0) {\n        value = this.series[i].stats[this.panel.valueName];\n      }\n\n      if (value === null || _.isString(value))  {\n        let error = new Error();\n        error.message = 'Data Error';\n        error.data = 'Data points is a string, cannot use in calculation ' + this.series[i].alias;\n        throw error;;\n      }\n\n      let alias = this.series[i].alias === null ? 'pos-' + i : this.series[i].alias;\n      map[alias] = value;\n    }\n\n    return calculate(formula, map);\n  }\n\n  setValueMapping(data) {\n    // check value to text mappings if its enabled\n    if (this.panel.mappingType === 1) {\n      for (let i = 0; i < this.panel.valueMaps.length; i++) {\n        let map = this.panel.valueMaps[i];\n        // special null case\n        if (map.value === 'null') {\n          if (data.value === null || data.value === void 0) {\n            data.valueFormatted = map.text;\n            return;\n          }\n          continue;\n        }\n\n        // value/number to text mapping\n        var value = parseFloat(map.value);\n        if (value === data.valueRounded) {\n          data.valueFormatted = map.text;\n          return;\n        }\n      }\n    } else if (this.panel.mappingType === 2) {\n      for (let i = 0; i < this.panel.rangeMaps.length; i++) {\n        let map = this.panel.rangeMaps[i];\n        // special null case\n        if (map.from === 'null' && map.to === 'null') {\n          if (data.value === null || data.value === void 0) {\n            data.valueFormatted = map.text;\n            return;\n          }\n          continue;\n        }\n\n        // value/number to range mapping\n        var from = parseFloat(map.from);\n        var to = parseFloat(map.to);\n        if (to >= data.valueRounded && from <= data.valueRounded) {\n          data.valueFormatted = map.text;\n          return;\n        }\n      }\n    }\n\n    if (data.value === null || data.value === void 0) {\n      data.valueFormatted = \"no value\";\n    }\n  }\n\n  getDecimalsForValue(value) {\n    if (_.isNumber(this.panel.decimals)) {\n      return {decimals: this.panel.decimals, scaledDecimals: null};\n    }\n\n    var delta = value / 2;\n    var dec = -Math.floor(Math.log(delta) / Math.LN10);\n\n    var magn = Math.pow(10, -dec),\n      norm = delta / magn, // norm is between 1.0 and 10.0\n      size;\n\n    if (norm < 1.5) {\n      size = 1;\n    } else if (norm < 3) {\n      size = 2;\n      // special case for 2.5, requires an extra decimal\n      if (norm > 2.25) {\n        size = 2.5;\n        ++dec;\n      }\n    } else if (norm < 7.5) {\n      size = 5;\n    } else {\n      size = 10;\n    }\n\n    size *= magn;\n\n    // reduce starting decimals if not needed\n    if (Math.floor(value) === value) { dec = 0; }\n\n    var result = {};\n    result.decimals = Math.max(0, dec);\n    result.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\n\n    return result;\n  }\n\n  removeValueMap(map) {\n    var index = _.indexOf(this.panel.valueMaps, map);\n    this.panel.valueMaps.splice(index, 1);\n    this.render();\n  }\n\n  addValueMap() {\n    this.panel.valueMaps.push({value: '', op: '=', text: '' });\n  }\n\n  removeRangeMap(rangeMap) {\n    var index = _.indexOf(this.panel.rangeMaps, rangeMap);\n    this.panel.rangeMaps.splice(index, 1);\n    this.render();\n  }\n\n  addRangeMap() {\n    this.panel.rangeMaps.push({from: '', to: '', text: ''});\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    var $location = this.$location;\n    var linkSrv = this.linkSrv;\n    var $timeout = this.$timeout;\n    var panel = ctrl.panel;\n    var templateSrv = this.templateSrv;\n    var data, linkInfo;\n    var $panelContainer = elem.find('.panel-container');\n    elem = elem.find('.singlestat-panel');\n\n    function setElementHeight() {\n      elem.css('height', ctrl.height + 'px');\n    }\n\n    function applyColoringThresholds(value, valueString) {\n      if (!panel.colorValue) {\n        return valueString;\n      }\n\n      var color = getColorForValue(data, value);\n      if (color) {\n        return '<span style=\"color:' + color + '\">'+ valueString + '</span>';\n      }\n\n      return valueString;\n    }\n\n    function getSpan(className, fontSize, value)  {\n      value = templateSrv.replace(value, data.scopedVars);\n      return '<span class=\"' + className + '\" style=\"font-size:' + fontSize + '\">' +\n        value + '</span>';\n    }\n\n    function getBigValueHtml() {\n      var body = '<div class=\"singlestat-panel-value-container\">';\n\n      if (panel.prefix) { body += getSpan('singlestat-panel-prefix', panel.prefixFontSize, panel.prefix); }\n\n      var value = applyColoringThresholds(data.value, data.valueFormatted);\n      body += getSpan('singlestat-panel-value', panel.valueFontSize, value);\n\n      if (panel.postfix) { body += getSpan('singlestat-panel-postfix', panel.postfixFontSize, panel.postfix); }\n\n      body += '</div>';\n\n      return body;\n    }\n\n    function getValueText() {\n      var result = panel.prefix ? templateSrv.replace(panel.prefix, data.scopedVars) : '';\n      result += data.valueFormatted;\n      result += panel.postfix ? templateSrv.replace(panel.postfix, data.scopedVars) : '';\n\n      return result;\n\t\t}\n    function addGauge() {\n      var width = elem.width();\n      var height = elem.height();\n      var dimension = Math.min(width, height);\n\n      ctrl.invalidGaugeRange = false;\n      if (panel.gauge.minValue > panel.gauge.maxValue) {\n        ctrl.invalidGaugeRange = true;\n        return;\n      }\n\n      var plotCanvas = $('<div></div>');\n      var plotCss = {\n        top: '10px',\n        margin: 'auto',\n        position: 'relative',\n        height: (height * 0.9) + 'px',\n        width:  dimension + 'px'\n      };\n\n      plotCanvas.css(plotCss);\n\n      var thresholds = [];\n      for (var i = 0; i < data.thresholds.length; i++) {\n        thresholds.push({\n          value: data.thresholds[i],\n          color: data.colorMap[i]\n        });\n      }\n      thresholds.push({\n        value: panel.gauge.maxValue,\n        color: data.colorMap[data.colorMap.length  - 1]\n      });\n\n      var bgColor = config.bootData.user.lightTheme\n        ? 'rgb(230,230,230)'\n        : 'rgb(38,38,38)';\n\n      var fontScale = parseInt(panel.valueFontSize) / 100;\n      var fontSize = Math.min(dimension/5, 100) * fontScale;\n      var gaugeWidth = Math.min(dimension/6, 60);\n      var thresholdMarkersWidth = gaugeWidth/5;\n\n      var options = {\n        series: {\n          gauges: {\n            gauge: {\n              min: panel.gauge.minValue,\n              max: panel.gauge.maxValue,\n              background: { color: bgColor },\n              border: { color: null },\n              shadow: { show: false },\n              width: gaugeWidth,\n            },\n            frame: { show: false },\n            label: { show: false },\n            layout: { margin: 0, thresholdWidth: 0 },\n            cell: { border: { width: 0 } },\n            threshold: {\n              values: thresholds,\n              label: {\n                show: panel.gauge.thresholdLabels,\n                margin: 8,\n                font: { size: 18 }\n              },\n              show: panel.gauge.thresholdMarkers,\n              width: thresholdMarkersWidth,\n            },\n            value: {\n              color: panel.colorValue ? getColorForValue(data, data.valueRounded) : null,\n              formatter: function() { return getValueText(); },\n              font: { size: fontSize, family: '\"Helvetica Neue\", Helvetica, Arial, sans-serif' }\n            },\n            show: true\n          }\n        }\n      };\n\n      elem.append(plotCanvas);\n\n      var plotSeries = {\n        data: [[0, data.valueRounded]]\n      };\n\n      $.plot(plotCanvas, [plotSeries], options);\n    }\n\n    function addSparkline() {\n      var width = elem.width() + 20;\n      if (width < 30) {\n        // element has not gotten it's width yet\n        // delay sparkline render\n        setTimeout(addSparkline, 30);\n        return;\n      }\n\n      var height = ctrl.height;\n      var plotCanvas = $('<div></div>');\n      var plotCss = {};\n      plotCss.position = 'absolute';\n\n      if (panel.sparkline.full) {\n        plotCss.bottom = '5px';\n        plotCss.left = '-5px';\n        plotCss.width = (width - 10) + 'px';\n        var dynamicHeightMargin = height <= 100 ? 5 : (Math.round((height/100)) * 15) + 5;\n        plotCss.height = (height - dynamicHeightMargin) + 'px';\n      } else {\n        plotCss.bottom = \"0px\";\n        plotCss.left = \"-5px\";\n        plotCss.width = (width - 10) + 'px';\n        plotCss.height = Math.floor(height * 0.25) + \"px\";\n      }\n\n      plotCanvas.css(plotCss);\n\n      var options = {\n        legend: { show: false },\n        series: {\n          lines:  {\n            show: true,\n            fill: 1,\n            lineWidth: 1,\n            fillColor: panel.sparkline.fillColor,\n          },\n        },\n        yaxes: { show: false },\n        xaxis: {\n          show: false,\n          mode: \"time\",\n          min: ctrl.range.from.valueOf(),\n          max: ctrl.range.to.valueOf(),\n        },\n        grid: { hoverable: false, show: false },\n      };\n\n      elem.append(plotCanvas);\n\n      var plotSeries = {\n        data: data.flotpairs,\n        color: panel.sparkline.lineColor\n      };\n\n      $.plot(plotCanvas, [plotSeries], options);\n    }\n\n    function render() {\n      if (!ctrl.data) { return; }\n      data = ctrl.data;\n\n      // get thresholds\n      data.thresholds = panel.thresholds.split(',').map(function(strVale) {\n        return Number(strVale.trim());\n      });\n      data.colorMap = panel.colors;\n\n      setElementHeight();\n\n      var body = panel.gauge.show ? '' : getBigValueHtml();\n\n      if (panel.colorBackground && !isNaN(data.value)) {\n        var color = getColorForValue(data, data.value);\n        if (color) {\n          $panelContainer.css('background-color', color);\n          if (scope.fullscreen) {\n            elem.css('background-color', color);\n          } else {\n            elem.css('background-color', '');\n          }\n        }\n      } else {\n        $panelContainer.css('background-color', '');\n        elem.css('background-color', '');\n        panel.circleBackground = false;\n      }\n\n      if (panel.circleBackground) {\n        let circleHeight = $($panelContainer.height())[0] - 27;\n        let circleWidth = $($panelContainer.width())[0];\n\n        $($panelContainer).addClass('circle');\n        $panelContainer.css('background-color', '');\n\n        if (circleWidth >= circleHeight) {\n          elem.css({\n            'border-radius': '50%',\n            width: circleHeight + 'px',\n            height: circleHeight + 'px',\n            'background-color': color,\n          });\n        } else {\n          elem.css({\n            'border-radius': '50%',\n            width: circleWidth + 'px',\n            height: circleWidth + 'px',\n            'background-color': color,\n          });\n        }\n      } else {\n        $($panelContainer).removeClass('circle');\n        elem.css({ 'border-radius': '0', width: '', height: '' });\n      }\n\n      elem.html(body);\n\n      if (panel.sparkline.show) {\n        addSparkline();\n      }\n\n      if (panel.gauge.show) {\n        addGauge();\n      }\n\n      elem.toggleClass('pointer', panel.links.length > 0);\n\n      if (panel.links.length > 0) {\n        linkInfo = linkSrv.getPanelLinkAnchorInfo(panel.links[0], data.scopedVars);\n      } else {\n        linkInfo = null;\n      }\n    }\n\n    function hookupDrilldownLinkTooltip() {\n      // drilldown link tooltip\n      var drilldownTooltip = $('<div id=\"tooltip\" class=\"\">hello</div>\"');\n\n      elem.mouseleave(function() {\n        if (panel.links.length === 0) { return;}\n        $timeout(function() {\n          drilldownTooltip.detach();\n        });\n      });\n\n      elem.click(function(evt) {\n        if (!linkInfo) { return; }\n        // ignore title clicks in title\n        if ($(evt).parents('.panel-header').length > 0) { return; }\n\n        if (linkInfo.target === '_blank') {\n          var redirectWindow = window.open(linkInfo.href, '_blank');\n          redirectWindow.location;\n          return;\n        }\n\n        if (linkInfo.href.indexOf('http') === 0) {\n          window.location.href = linkInfo.href;\n        } else {\n          $timeout(function() {\n            $location.url(linkInfo.href);\n          });\n        }\n\n        drilldownTooltip.detach();\n      });\n\n      elem.mousemove(function(e) {\n        if (!linkInfo) { return;}\n\n        drilldownTooltip.text('click to go to: ' + linkInfo.title);\n        drilldownTooltip.place_tt(e.pageX, e.pageY-50);\n      });\n    }\n\n    hookupDrilldownLinkTooltip();\n\n    this.events.on('render', function() {\n      render();\n      ctrl.renderingCompleted();\n    });\n  }\n}\n\nfunction getColorForValue(data, value) {\n  for (var i = data.thresholds.length; i > 0; i--) {\n    if (value >= data.thresholds[i-1]) {\n      return data.colorMap[i];\n    }\n  }\n  return _.first(data.colorMap);\n}\n\n\nfunction calculate(formula, valueMap) {\n  for ( var alias in valueMap ) {\n    var re = new RegExp(alias, \"g\");\n    formula = formula.replace(re, valueMap[alias]);\n  }\n  try {\n    return eval(formula);\n  }\n  catch (err) {\n    let error = new Error();\n    error.message = 'Calculation Error';\n    error.data = err.message;\n    throw error;\n  }\n}\n\nCalcStatCtrl.templateUrl = 'tpl/module.html';\n"]}