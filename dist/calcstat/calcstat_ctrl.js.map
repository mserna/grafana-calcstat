{"version":3,"sources":["../../src/calcstat_ctrl.js"],"names":["getColorForValue","data","value","i","thresholds","length","colorMap","_","first","calculate","formula","valueMap","alias","re","RegExp","replace","eval","SingleStatCtrl","MetricsPanelCtrl","kbn","TimeSeries","config","panelDefaults","links","datasource","maxDataPoints","interval","targets","cacheTimeout","format","prefix","postfix","nullText","valueMaps","op","text","mappingTypes","name","rangeMaps","from","to","mappingType","nullPointMode","valueName","prefixFontSize","valueFontSize","postfixFontSize","colorBackground","colorValue","colors","sparkline","show","full","lineColor","fillColor","gauge","minValue","maxValue","thresholdMarkers","thresholdLabels","tableColumn","CalcStatCtrl","$scope","$injector","$location","linkSrv","templateUrl","dataType","series","invalidGaugeRange","valueNameOptions","defaults","panel","events","on","onDataReceived","bind","onDataError","onInitEditMode","dataList","type","tableData","map","tableHandler","setTableValues","seriesHandler","setValues","render","fontSizes","addEditorTab","unitFormats","getUnitFormats","seriesData","datapoints","target","flotpairs","getFlotPairs","columnNames","columns","forEach","column","columnIndex","tableColumnOptions","find","setTableColumnToSensibleDefault","rows","row","datapoint","key","push","subItem","col","undefined","highestValue","lowestValue","Number","MAX_VALUE","isString","valueFormatted","escape","valueRounded","decimalInfo","getDecimalsForValue","formatFunc","valueFormats","decimals","scaledDecimals","roundValue","setValueMapping","options","background","tmp","lastPoint","last","lastValue","isArray","stats","scopedVars","extend","label","calcFormula","error","Error","message","calculateDisplayValue","flotPairs","calculatedFlotPairs","longestMetricsLength","longestMetricIndex","j","point","result","timestamp","flotPair","parseFloat","isNumber","delta","dec","Math","floor","log","LN10","magn","pow","norm","size","max","index","indexOf","splice","rangeMap","scope","elem","attrs","ctrl","$timeout","templateSrv","linkInfo","$panelContainer","setElementHeight","css","height","applyColoringThresholds","valueString","color","getSpan","className","fontSize","getBigValueHtml","body","getValueText","addGauge","width","dimension","min","plotCanvas","$","plotCss","top","margin","position","bgColor","bootData","user","lightTheme","fontScale","parseInt","gaugeWidth","thresholdMarkersWidth","gauges","border","shadow","frame","layout","thresholdWidth","cell","threshold","values","font","formatter","family","append","plotSeries","plot","addSparkline","setTimeout","bottom","left","dynamicHeightMargin","round","legend","lines","fill","lineWidth","yaxes","xaxis","mode","range","valueOf","grid","hoverable","split","strVale","trim","isNaN","fullscreen","html","toggleClass","getPanelLinkAnchorInfo","hookupDrilldownLinkTooltip","drilldownTooltip","mouseleave","detach","click","evt","parents","redirectWindow","window","open","href","location","url","mousemove","e","title","place_tt","pageX","pageY","renderingCompleted"],"mappings":"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","file":"calcstat_ctrl.js","sourcesContent":["import {SingleStatCtrl} from 'app/plugins/panel/singlestat/module';\nimport {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport kbn from 'app/core/utils/kbn';\nimport TimeSeries from 'app/core/time_series2';\nimport config from 'app/core/config';\n\n\n// Set and populate defaults\nconst panelDefaults = {\n  links: [],\n  datasource: null,\n  maxDataPoints: 100,\n  interval: null,\n  targets: [{}],\n  cacheTimeout: null,\n  format: 'none',\n  prefix: '',\n  postfix: '',\n  nullText: null,\n  valueMaps: [\n    { value: 'null', op: '=', text: 'N/A' }\n  ],\n  mappingTypes: [\n    {name: 'value to text', value: 1},\n    {name: 'range to text', value: 2},\n  ],\n  rangeMaps: [\n    { from: 'null', to: 'null', text: 'N/A' }\n  ],\n  mappingType: 1,\n  nullPointMode: 'connected',\n  valueName: 'avg',\n  prefixFontSize: '50%',\n  valueFontSize: '80%',\n  postfixFontSize: '50%',\n  thresholds: '',\n  colorBackground: false,\n  colorValue: false,\n  colors: [\"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\"],\n  sparkline: {\n    show: false,\n    full: false,\n    lineColor: 'rgb(31, 120, 193)',\n    fillColor: 'rgba(31, 118, 189, 0.18)',\n  },\n  gauge: {\n    show: false,\n    minValue: 0,\n    maxValue: 100,\n    thresholdMarkers: true,\n    thresholdLabels: false\n  },\n  tableColumn: ''\n};\n\nexport class CalcStatCtrl extends MetricsPanelCtrl {\n\n  constructor($scope, $injector, $location, linkSrv) {\n    super($scope, $injector);\n    \n\n    this.templateUrl = 'tpl/module.html';\n    this.linkSrv = linkSrv;\n    this.dataType ='timeseries';\n    this.series = [];\n    this.invalidGaugeRange = true;\n    this.valueNameOptions = ['min','max','avg', 'current', 'total', 'name', 'first', 'delta', 'diff', 'range'];\n\n\n    _.defaults(this.panel, panelDefaults);\n\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n  }\n  \n  onDataReceived(dataList) {\n    var data= {};\n    if (dataList.length > 0 && dataList[0].type === 'table'){\n      this.dataType = 'table';\n      tableData = dataList.map(this.tableHandler.bind(this));\n      this.setTableValues(tableData, data);\n    } else {\n      this.dataType = 'timeseries';\n      this.series = dataList.map(this.seriesHandler.bind(this));\n      this.setValues(data);\n    }\n    this.data = data;\n    this.render();\n  } \n\n  onDataError() {\n    this.onDataReceived([]);\n  }\n\n  onInitEditMode() {\n    this.fontSizes = ['20%', '30%','50%','70%','80%','100%', '110%', '120%', '150%', '170%', '200%'];\n    this.addEditorTab('Options', 'public/plugins/calcstat/tpl/editor.html', 2);\n    this.addEditorTab('Value Mappings', 'public/plugins/calcstat/tpl/mappings.html', 3);\n    this.unitFormats = kbn.getUnitFormats();\n\n  }\n\n  seriesHandler(seriesData) {\n    var series = new TimeSeries({\n      datapoints: seriesData.datapoints,\n      alias: seriesData.target,\n    });\n\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n    return series;\n  }\n\n  tableHandler(tableData) {\n    const datapoints = [];\n    const columnNames = {};\n\n    tableData.columns.forEach((column, columnIndex) => {\n      columnNames[columnIndex] = column.text;\n    });\n\n    this.tableColumnOptions = columnNames;\n    if (!_.find(tableData.columns, ['text', this.panel.tableColumn])) {\n      this.setTableColumnToSensibleDefault(tableData);\n    }\n\n    tableData.rows.forEach((row) => {\n      const datapoint = {};\n\n      row.forEach((value, columnIndex) => {\n        const key = columnNames[columnIndex];\n        datapoint[key] = value;\n      });\n\n      datapoints.push(datapoint);\n    });\n\n    return datapoints;\n  }\n\n  setUnitFormat(subItem) {\n    this.panel.format = subItem.value;\n    this.render();\n  }\nsetTableColumnToSensibleDefault(tableData) {\n    if (this.tableColumnOptions.length === 1) {\n      this.panel.tableColumn = this.tableColumnOptions[0];\n    } else {\n      this.panel.tableColumn = _.find(tableData.columns, (col) => { return col.type !== 'time'; }).text;\n    }\n  }\n\n  setTableValues(tableData, data) {\n    if (!tableData || tableData.length === 0) {\n      return;\n    }\n\n    if (tableData[0].length === 0 || tableData[0][0][this.panel.tableColumn] === undefined) {\n      return;\n    }\n\n    let highestValue = 0;\n    let lowestValue = Number.MAX_VALUE;\n    const datapoint = tableData[0][0];\n    data.value = datapoint[this.panel.tableColumn];\n\n    if (_.isString(data.value)) {\n      data.valueFormatted = _.escape(data.value);\n      data.value = 0;\n      data.valueRounded = 0;\n    } else {\n      const decimalInfo = this.getDecimalsForValue(data.value);\n      const formatFunc = kbn.valueFormats[this.panel.format];\n      data.valueFormatted = formatFunc(datapoint[this.panel.tableColumn], decimalInfo.decimals, decimalInfo.scaledDecimals);\n      data.valueRounded = kbn.roundValue(data.value, this.panel.decimals || 0);\n    }\n\n    this.setValueMapping(data);\n  }\n\n  setColoring(options) {\n    if (options.background) {\n      this.panel.colorValue = false;\n      this.panel.colors = ['rgba(71, 212, 59, 0.4)', 'rgba(245, 150, 40, 0.73)', 'rgba(225, 40, 40, 0.59)'];\n    } else {\n      this.panel.colorBackground = false;\n      this.panel.colors = ['rgba(50, 172, 45, 0.97)', 'rgba(237, 129, 40, 0.89)', 'rgba(245, 54, 54, 0.9)'];\n    }\n    this.render();\n  }\n\n  invertColorOrder() {\n    var tmp = this.panel.colors[0];\n    this.panel.colors[0] = this.panel.colors[2];\n    this.panel.colors[2] = tmp;\n    this.render();\n  }\n\n  setValues(data) {\n    data.flotpairs = [];\n\n    if (this.series && this.series.length == 1) {\n      var lastPoint = _.last(this.series[0].datapoints);\n      var lastValue = _.isArray(lastPoint) ? lastPoint[0] : null;\n      \n      if (this.panel.valueName === 'name') {\n        data.value = 0;\n        data.valueRounded = 0;\n        data.valueFormatted = this.series[0].alias;\n      } else if (_.isString(lastValue)) {\n        data.value = 0;\n        data.valueFormatted = _.escape(lastValue);\n        data.valueRounded = 0;\n      } else {\n        data.value = this.series[0].stats[this.panel.valueName];\n        data.flotpairs = this.series[0].flotpairs;\n\n        var decimalInfo = this.getDecimalsForValue(data.value);\n        var formatFunc = kbn.valueFormats[this.panel.format];\n        data.valueFormatted = formatFunc(data.value, decimalInfo.decimals, decimalInfo.scaledDecimals);\n        data.valueRounded = kbn.roundValue(data.value, decimalInfo.decimals);\n      }\n\n      // Add $__name variable for using in prefix or postfix\n      data.scopedVars = _.extend({}, this.panel.scopedVars);\n      data.scopedVars[\"__name\"] = {value: this.series[0].label};\n    }\n    else if (this.series && this.series.length > 1) {\n      let formula = this.panel.calcFormula;\n      if (formula === null) {\n        data.value = 0;\n        data.valueRounded = 0;\n        data.valueFormatted = 'Formula Required';\n        // throw error\n      }\n      \n      if (this.panel.valueName === 'name') {\n        let error = new Error();\n        error.message = 'Unsupported Error';\n        error.data = 'Does not support name fields when calculating stats';\n        throw error;\n      }\n\n      data.value = this.calculateDisplayValue(formula); \n\n      let flotPairs = [];\n      this.calculatedFlotPairs(formula, flotPairs);\n      if (flotPairs != null && flotPairs.length > 0) {\n        data.flotpairs = flotPairs;\n      }\n\n      let decimalInfo = this.getDecimalsForValue(data.value);\n      let formatFunc = kbn.valueFormats[this.panel.format];\n      data.valueFormatted = formatFunc(data.value, decimalInfo.decimals, decimalInfo.scaledDecimals);\n      data.valueRounded = kbn.roundValue(data.value, decimalInfo.decimals);\n      \n      // Add $__name variable for using in prefix or postfix\n      data.scopedVars = _.extend({}, this.panel.scopedVars);\n      data.scopedVars[\"__name\"] = {value: this.series[0].label};\n    }\n  \n    this.setValueMapping(data);\n  }\n \n  calculatedFlotPairs(formula, flotPairs) {\n    let longestMetricsLength = this.series[0].flotpairs.length;\n    let longestMetricIndex = 0;\n    for(let i=1; i < this.series.length; i++) {\n      if (longestMetricsLength < this.series[i].flotpairs.length) {\n        longestMetricsLength = this.series[i].flotpairs.length;\n        longestMetricIndex = i;\n      }\n    }\n\n    for(let j=0; j < longestMetricsLength; j++) {\n      let map = {};\n      for (let i=0; i < this.series.length; i++) {\n        let alias = this.series[i].alias === null ? 'pos-' + i : this.series[i].alias;\n        let point = null;\n        if (this.series[i].flotpairs.length === longestMetricsLength) {\n          point = this.series[i].flotpairs[j];\n        }\n        else {\n          point = _.last(this.series[i].flotpairs);\n        }\n        let value = _.isArray(point) ? point[1] : 0;\n        map[alias] = _.isString(value) ? 0 : value;\n      }\n      let result = calculate(formula, map);\n      let timestamp = this.series[longestMetricIndex].flotpairs[j][0];\n\n      let flotPair = [];\n      flotPair.push(timestamp);\n      flotPair.push(result);\n      flotPairs.push(flotPair);\n    }\n  }\n\n  calculateDisplayValue(formula) {\n    let map = {};\n    for(let i=0; i < this.series.length; i++) {\n      if(this.series[i].datapoints === null || this.series[i].datapoints.length === 0) {\n        let error = new Error();\n        error.message = 'Data Error';\n        error.data = 'Data points missing for metrics ' + this.series[i].alias;\n        throw error;\n      }\n\n      let value = this.series[i].stats[this.panel.valueName];\n      if (value === null || _.isString(value))  {\n        let error = new Error();\n        error.message = 'Data Error';\n        error.data = 'Data points is a string, cannot use in calculation ' + this.series[i].alias;\n        throw error;;\n      }\n\n      let alias = this.series[i].alias === null ? 'pos-' + i : this.series[i].alias;\n      map[alias] = value;\n    }\n\n    return calculate(formula, map);\n  }\n\n  setValueMapping(data) {\n    // check value to text mappings if its enabled\n    if (this.panel.mappingType === 1) {\n      for (let i = 0; i < this.panel.valueMaps.length; i++) {\n        let map = this.panel.valueMaps[i];\n        // special null case\n        if (map.value === 'null') {\n          if (data.value === null || data.value === void 0) {\n            data.valueFormatted = map.text;\n            return;\n          }\n          continue;\n        }\n\n        // value/number to text mapping\n        var value = parseFloat(map.value);\n        if (value === data.valueRounded) {\n          data.valueFormatted = map.text;\n          return;\n        }\n      }\n    } else if (this.panel.mappingType === 2) {\n      for (let i = 0; i < this.panel.rangeMaps.length; i++) {\n        let map = this.panel.rangeMaps[i];\n        // special null case\n        if (map.from === 'null' && map.to === 'null') {\n          if (data.value === null || data.value === void 0) {\n            data.valueFormatted = map.text;\n            return;\n          }\n          continue;\n        }\n\n        // value/number to range mapping\n        var from = parseFloat(map.from);\n        var to = parseFloat(map.to);\n        if (to >= data.valueRounded && from <= data.valueRounded) {\n          data.valueFormatted = map.text;\n          return;\n        }\n      }\n    }\n\n    if (data.value === null || data.value === void 0) {\n      data.valueFormatted = \"no value\";\n    }\n  }\n\n  getDecimalsForValue(value) {\n    if (_.isNumber(this.panel.decimals)) {\n      return {decimals: this.panel.decimals, scaledDecimals: null};\n    }\n\n    var delta = value / 2;\n    var dec = -Math.floor(Math.log(delta) / Math.LN10);\n\n    var magn = Math.pow(10, -dec),\n      norm = delta / magn, // norm is between 1.0 and 10.0\n      size;\n\n    if (norm < 1.5) {\n      size = 1;\n    } else if (norm < 3) {\n      size = 2;\n      // special case for 2.5, requires an extra decimal\n      if (norm > 2.25) {\n        size = 2.5;\n        ++dec;\n      }\n    } else if (norm < 7.5) {\n      size = 5;\n    } else {\n      size = 10;\n    }\n\n    size *= magn;\n\n    // reduce starting decimals if not needed\n    if (Math.floor(value) === value) { dec = 0; }\n\n    var result = {};\n    result.decimals = Math.max(0, dec);\n    result.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\n\n    return result;\n  }\n\n  removeValueMap(map) {\n    var index = _.indexOf(this.panel.valueMaps, map);\n    this.panel.valueMaps.splice(index, 1);\n    this.render();\n  }\n\n  addValueMap() {\n    this.panel.valueMaps.push({value: '', op: '=', text: '' });\n  }\n\n  removeRangeMap(rangeMap) {\n    var index = _.indexOf(this.panel.rangeMaps, rangeMap);\n    this.panel.rangeMaps.splice(index, 1);\n    this.render();\n  }\n\n  addRangeMap() {\n    this.panel.rangeMaps.push({from: '', to: '', text: ''});\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    var $location = this.$location;\n    var linkSrv = this.linkSrv;\n    var $timeout = this.$timeout;\n    var panel = ctrl.panel;\n    var templateSrv = this.templateSrv;\n    var data, linkInfo;\n    var $panelContainer = elem.find('.panel-container');\n    elem = elem.find('.singlestat-panel');\n\n    function setElementHeight() {\n      elem.css('height', ctrl.height + 'px');\n    }\n\n    function applyColoringThresholds(value, valueString) {\n      if (!panel.colorValue) {\n        return valueString;\n      }\n\n      var color = getColorForValue(data, value);\n      if (color) {\n        return '<span style=\"color:' + color + '\">'+ valueString + '</span>';\n      }\n\n      return valueString;\n    }\n\n    function getSpan(className, fontSize, value)  {\n      value = templateSrv.replace(value, data.scopedVars);\n      return '<span class=\"' + className + '\" style=\"font-size:' + fontSize + '\">' +\n        value + '</span>';\n    }\n\n    function getBigValueHtml() {\n      var body = '<div class=\"singlestat-panel-value-container\">';\n\n      if (panel.prefix) { body += getSpan('singlestat-panel-prefix', panel.prefixFontSize, panel.prefix); }\n\n      var value = applyColoringThresholds(data.value, data.valueFormatted);\n      body += getSpan('singlestat-panel-value', panel.valueFontSize, value);\n\n      if (panel.postfix) { body += getSpan('singlestat-panel-postfix', panel.postfixFontSize, panel.postfix); }\n\n      body += '</div>';\n\n      return body;\n    }\n\n    function getValueText() {\n      var result = panel.prefix ? templateSrv.replace(panel.prefix, data.scopedVars) : '';\n      result += data.valueFormatted;\n      result += panel.postfix ? templateSrv.replace(panel.postfix, data.scopedVars) : '';\n\n      return result;\n\t\t}\n    function addGauge() {\n      var width = elem.width();\n      var height = elem.height();\n      var dimension = Math.min(width, height);\n\n      ctrl.invalidGaugeRange = false;\n      if (panel.gauge.minValue > panel.gauge.maxValue) {\n        ctrl.invalidGaugeRange = true;\n        return;\n      }\n\n      var plotCanvas = $('<div></div>');\n      var plotCss = {\n        top: '10px',\n        margin: 'auto',\n        position: 'relative',\n        height: (height * 0.9) + 'px',\n        width:  dimension + 'px'\n      };\n\n      plotCanvas.css(plotCss);\n\n      var thresholds = [];\n      for (var i = 0; i < data.thresholds.length; i++) {\n        thresholds.push({\n          value: data.thresholds[i],\n          color: data.colorMap[i]\n        });\n      }\n      thresholds.push({\n        value: panel.gauge.maxValue,\n        color: data.colorMap[data.colorMap.length  - 1]\n      });\n\n      var bgColor = config.bootData.user.lightTheme\n        ? 'rgb(230,230,230)'\n        : 'rgb(38,38,38)';\n\n      var fontScale = parseInt(panel.valueFontSize) / 100;\n      var fontSize = Math.min(dimension/5, 100) * fontScale;\n      var gaugeWidth = Math.min(dimension/6, 60);\n      var thresholdMarkersWidth = gaugeWidth/5;\n\n      var options = {\n        series: {\n          gauges: {\n            gauge: {\n              min: panel.gauge.minValue,\n              max: panel.gauge.maxValue,\n              background: { color: bgColor },\n              border: { color: null },\n              shadow: { show: false },\n              width: gaugeWidth,\n            },\n            frame: { show: false },\n            label: { show: false },\n            layout: { margin: 0, thresholdWidth: 0 },\n            cell: { border: { width: 0 } },\n            threshold: {\n              values: thresholds,\n              label: {\n                show: panel.gauge.thresholdLabels,\n                margin: 8,\n                font: { size: 18 }\n              },\n              show: panel.gauge.thresholdMarkers,\n              width: thresholdMarkersWidth,\n            },\n            value: {\n              color: panel.colorValue ? getColorForValue(data, data.valueRounded) : null,\n              formatter: function() { return getValueText(); },\n              font: { size: fontSize, family: '\"Helvetica Neue\", Helvetica, Arial, sans-serif' }\n            },\n            show: true\n          }\n        }\n      };\n\n      elem.append(plotCanvas);\n\n      var plotSeries = {\n        data: [[0, data.valueRounded]]\n      };\n\n      $.plot(plotCanvas, [plotSeries], options);\n    }\n\n    function addSparkline() {\n      var width = elem.width() + 20;\n      if (width < 30) {\n        // element has not gotten it's width yet\n        // delay sparkline render\n        setTimeout(addSparkline, 30);\n        return;\n      }\n\n      var height = ctrl.height;\n      var plotCanvas = $('<div></div>');\n      var plotCss = {};\n      plotCss.position = 'absolute';\n\n      if (panel.sparkline.full) {\n        plotCss.bottom = '5px';\n        plotCss.left = '-5px';\n        plotCss.width = (width - 10) + 'px';\n        var dynamicHeightMargin = height <= 100 ? 5 : (Math.round((height/100)) * 15) + 5;\n        plotCss.height = (height - dynamicHeightMargin) + 'px';\n      } else {\n        plotCss.bottom = \"0px\";\n        plotCss.left = \"-5px\";\n        plotCss.width = (width - 10) + 'px';\n        plotCss.height = Math.floor(height * 0.25) + \"px\";\n      }\n\n      plotCanvas.css(plotCss);\n\n      var options = {\n        legend: { show: false },\n        series: {\n          lines:  {\n            show: true,\n            fill: 1,\n            lineWidth: 1,\n            fillColor: panel.sparkline.fillColor,\n          },\n        },\n        yaxes: { show: false },\n        xaxis: {\n          show: false,\n          mode: \"time\",\n          min: ctrl.range.from.valueOf(),\n          max: ctrl.range.to.valueOf(),\n        },\n        grid: { hoverable: false, show: false },\n      };\n\n      elem.append(plotCanvas);\n\n      var plotSeries = {\n        data: data.flotpairs,\n        color: panel.sparkline.lineColor\n      };\n\n      $.plot(plotCanvas, [plotSeries], options);\n    }\n\n    function render() {\n      if (!ctrl.data) { return; }\n      data = ctrl.data;\n\n      // get thresholds\n      data.thresholds = panel.thresholds.split(',').map(function(strVale) {\n        return Number(strVale.trim());\n      });\n      data.colorMap = panel.colors;\n\n      setElementHeight();\n\n      var body = panel.gauge.show ? '' : getBigValueHtml();\n\n      if (panel.colorBackground && !isNaN(data.value)) {\n        var color = getColorForValue(data, data.value);\n        if (color) {\n          $panelContainer.css('background-color', color);\n          if (scope.fullscreen) {\n            elem.css('background-color', color);\n          } else {\n            elem.css('background-color', '');\n          }\n        }\n      } else {\n        $panelContainer.css('background-color', '');\n        elem.css('background-color', '');\n      }\n\n      elem.html(body);\n\n      if (panel.sparkline.show) {\n        addSparkline();\n      }\n\n      if (panel.gauge.show) {\n        addGauge();\n      }\n\n      elem.toggleClass('pointer', panel.links.length > 0);\n\n      if (panel.links.length > 0) {\n        linkInfo = linkSrv.getPanelLinkAnchorInfo(panel.links[0], data.scopedVars);\n      } else {\n        linkInfo = null;\n      }\n    }\n\n    function hookupDrilldownLinkTooltip() {\n      // drilldown link tooltip\n      var drilldownTooltip = $('<div id=\"tooltip\" class=\"\">hello</div>\"');\n\n      elem.mouseleave(function() {\n        if (panel.links.length === 0) { return;}\n        $timeout(function() {\n          drilldownTooltip.detach();\n        });\n      });\n\n      elem.click(function(evt) {\n        if (!linkInfo) { return; }\n        // ignore title clicks in title\n        if ($(evt).parents('.panel-header').length > 0) { return; }\n\n        if (linkInfo.target === '_blank') {\n          var redirectWindow = window.open(linkInfo.href, '_blank');\n          redirectWindow.location;\n          return;\n        }\n\n        if (linkInfo.href.indexOf('http') === 0) {\n          window.location.href = linkInfo.href;\n        } else {\n          $timeout(function() {\n            $location.url(linkInfo.href);\n          });\n        }\n\n        drilldownTooltip.detach();\n      });\n\n      elem.mousemove(function(e) {\n        if (!linkInfo) { return;}\n\n        drilldownTooltip.text('click to go to: ' + linkInfo.title);\n        drilldownTooltip.place_tt(e.pageX, e.pageY-50);\n      });\n    }\n\n    hookupDrilldownLinkTooltip();\n\n    this.events.on('render', function() {\n      render();\n      ctrl.renderingCompleted();\n    });\n  }\n}\n\nfunction getColorForValue(data, value) {\n  for (var i = data.thresholds.length; i > 0; i--) {\n    if (value >= data.thresholds[i-1]) {\n      return data.colorMap[i];\n    }\n  }\n  return _.first(data.colorMap);\n}\n\n\nfunction calculate(formula, valueMap) {\n  for ( var alias in valueMap ) {\n    var re = new RegExp(alias, \"g\");\n    formula = formula.replace(re, valueMap[alias]);\n  }\n  return eval(formula);\n}\n\n\nCalcStatCtrl.templateUrl = 'tpl/module.html';\n"]}